// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String           @id @default(uuid())
  nickname     String?
  email        String?          @unique
  profileImage String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  providers    AuthProvider[]   // Kakao, Google 등 여러 개 연결 가능
  refreshTokens RefreshToken[]  // 추가
}

model AuthProvider {
  id        String   @id @default(uuid())
  provider  String   // "kakao", "google", etc
  providerId String  // 외부 서비스의 고유 사용자 ID
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@unique([provider, providerId]) // 같은 provider의 같은 사용자 중복 금지
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
}